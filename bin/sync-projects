#!/usr/bin/env python
# Sync all projects from official origins and install dotfiles
# If dotfiles is not installed yet, after provisioning you can do
#
#     curl https://github.com/naggie/dotfiles/raw/master/bin/sync-projects | python


from subprocess import call
import os
import re

# clone/pull all my repositories.
# TODO: automatically enumerate github

# Doing things this way increases redundancy, highlights active projects and
# sets official origins.

active = [
	'git@github.com:naggie/dotfiles.git',
	'git@github.com:naggie/naggie.github.com.git',
	'git@github.com:naggie/darksky.git',
	'git@github.com:naggie/dscrates.git',
	'git@github.com:naggie/megafilter.git',
	'git@github.com:naggie/speakers.git',
	'naggie@chell.darksky.io:rcdos.git',
]

inactive = [
	'git@github.com:naggie/runuo.git',
	'git@github.com:naggie/nnplus.git',
	'git@github.com:naggie/ninja-motor-controller.git',
	'git@github.com:naggie/dschat.git',
	'git@github.com:naggie/DSPA.git',
	'git@github.com:naggie/averclock.git',
	'git@github.com:naggie/vosbox.git',
	'git@github.com:naggie/MLDASH.git',
	'git@github.com:naggie/algalon.git',
]

def step(text):
	'Declare a step in execution. Simply print in green.'
	print '\033[92m%s\033[0m' % text

def sync(urls):
	origin = os.getcwd()
	for url in urls:
		dir = re.search(r"([\.\-0-9a-zA-Z]+)\.git$",url).group(1)
		if os.path.exists('%s/.git' % dir):
			step('PULL %s' % dir)
			os.chdir(dir)
			call(['git','pull','origin','master'])
			call(['git','submodule','update'])
			os.chdir(origin)
		else:
			step('INIT %s' % dir)
			call(['git','clone','--recursive','--quiet',url,dir])

sync(active)
if not os.path.exists('INACTIVE'):
	os.makedirs('INACTIVE')

os.chdir('INACTIVE')
sync(inactive)
os.chdir('..')

# install latest dotfiles
step('INST dotfiles')
os.chdir('dotfiles')
call(['./install.sh','naggie'])
