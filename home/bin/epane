#!/bin/bash

if [ ! $1 ]; then
	echo "Usage: $0 <command> <args...>"
	echo "Runs command with independent TMUX pane for stderr"
	exit 1
fi

if [ ! $TMUX ]; then
	echo 'EPANE: TMUX session required!'
	exit 2
fi

if [ $(tmux list-panes | wc -l) -ne 1 ]; then
	echo 'EPANE: Close other TMUX panes first'
	exit 3
fi

FIFO=/tmp/$$.stderr.fifo

mkfifo $FIFO

# use tail -f instead of cat, so SIGPIPE has no effect.
# http://stackoverflow.com/questions/6834347/named-pipe-closing-prematurely-in-script
tmux split-window -h "tail -f $FIFO"
tmux select-pane -L

echo -e "EPANE: STDERR output for $1:\n" > $FIFO

# red
tput setaf 1 > $FIFO

function cleanup {
	echo EPANE: Cleaning up
	rm $FIFO
	if [ $(tmux capture-pane -p -J -t 1 -S 2 | wc -w) -eq 0 ]; then
		# no stderr detected, discard buffer
		tmux kill-pane -t 1
		echo EPANE: No STDERR, discarding buffer
	fi
}

# if user presses CTRL+C, the FIFO must not persist
# BTW http://stackoverflow.com/questions/5350865/why-do-many-unix-programs-use-signals-like-usr1
trap cleanup EXIT

"$@" 2>$FIFO
